[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.1.3"
# first party (database)
psycopg2-binary = "^2.9.10"
# 3rd party (db URI)
dj-database-url = "^2.3.0"
# 3rd party (envs)
python-dotenv = "^1.0.1"
# 3rd party (files)
django-dynamic-filenames = "^1.4.0"
# first party (image)
pillow = "^11.0.0"
# 3rd party (file middleware)
django-cleanup = "^9.0.0"
# rest framework and plugins
djangorestframework = "^3.15.2"
markdown = "^3.7"
# 3rd party (django filtering)
django-filter = "^24.3"
# 3rd party (cors headers)
django-cors-headers = "^4.6.0"
# 3rd party (token authentication)
django-rest-knox = "^5.0.2"
# 3rd party (semantic versioning)
semantic-version = "^2.10.0"
# OpenAPI
drf-spectacular = {extras = ["sidecar"], version = "^0.27.2"}
# 3rd party exception handler
drf-standardized-errors = {extras = ["openapi"], version = "^0.14.1"}

[tool.poetry.group.dev.dependencies]
# task runner
poethepoet = "^0.31.1"
# django extentions
django-extensions = "^3.2.3"
# typing support
django-types = "^0.19.1"
django-stubs-ext = "^5.1.1"
# graphs
pyparsing = "^3.2.0"
pydot = "^3.0.2"
# formatter
black = "^24.10.0"
# sort imports
isort = "^5.13.2"
# linter
flake8 = "^7.1.1"

[tool.poetry.group.test.dependencies]
# pytest and plugins
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
pytest-django = "^4.9.0"

[tool.poe.tasks]
dev = "python ./manage.py runserver"
# migrations
sync = "python ./manage.py migrate"
mksync = "python ./manage.py makemigrations"
createsuperuser = "python ./manage.py createsuperuser"
# test and coverage
test = "pytest --cov-config=./.coveragerc --cov=./ ./tests/"
# django extentions
graph = "python ./manage.py graph_models --pydot -a --hide-edge-labels -o graph_models.png"
reset_db = "python ./manage.py reset_db"
# sort imports
isort = "isort ./"
# format codes
black = "black ./"
# run format with isort and blac
format = ["isort", "black"]
# lint python codes
lint = "flake8"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
pythonpath = ["."]
python_files = ["test_*.py"]

[tool.black]
line-length = 92
target-version = ["py36", "py37", "py38"]
skip-string-normalization = true

[tool.isort]
profile = "black"

[tool.pyright]
venvPath = "./"
venv = ".venv"
pythonVersion = "3.12"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
